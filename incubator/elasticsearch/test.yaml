---
# Source: elasticsearch/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: es01
  labels:
    app: es01
    chart: "elasticsearch-0.0.1"
    release: "left-cricket"
    heritage: "Tiller"
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  clusterIP: None
  ports:
    - name: http
      port: 9200
      targetPort: 9200
    - name: node2node
      port: 9300
      targetPort: 9300
  selector: 
    app: es01
  type: NodePort

---
# Source: elasticsearch/templates/petset.yaml
apiVersion: "apps/v1alpha1"
kind: PetSet
metadata:
  name: es01
  labels:
    app: es01
    chart: elasticsearch-0.0.1
    release: left-cricket
    heritage: Tiller
spec:
  serviceName: es01
  replicas: 3 
  template:
    metadata:
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
        pod.beta.kubernetes.io/init-containers: '[
            {
                "name": "plugin-discovery-k8s",
                "image": "bitnami/elasticsearch:2.4.1-r3", 
                "command": [ "/opt/bitnami/elasticsearch/bin/plugin" , "install", "-b",   "io.fabric8/elasticsearch-cloud-kubernetes/2.4.1" ],
                "volumeMounts": [
                    {
                        "name": "es01" ,
                        "mountPath": "/bitnami/elasticsearch"
                    }
                ]
            }
        ]'
      labels:
        app: es01
    spec:
      containers:
      - name: es01
        image: "bitnami/elasticsearch:2.4.1-r3"
        imagePullPolicy: ""
        env:
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTICSEARCH_NODEPORT
          value: "9300"
        - name: ELASTICSEARCH_CLUSTER_NAME
          value: "elasticsearch-cluster"
        - name: ELASTICSEARCH_CLUSTER_HOSTS
          value: es01-0.es01.default.svc.cluster.local
        - name: ELASTICSEARCH_CLIENT_NODE
          value: "false"
        - name: ELASTICSEARCH_NODE_NAME
          value: ""
        ports: 
        - name: rest
          containerPort: 9200
          protocol: "TCP"
        - name: node2node 
          containerPort: 9300
          protocol: "TCP"
        livenessProbe:
          httpGet:
            path: /
            port: rest
          initialDelaySeconds: 300
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: rest
          initialDelaySeconds: 250
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 300m
            memory: 3000Mi
        volumeMounts:
        - name: es01
          mountPath: "/bitnami/elasticsearch"
  volumeClaimTemplates:
  - metadata:
      name: es01
      annotations:
        volume.alpha.kubernetes.io/storage-class: generic
    spec:
      accessModes: [ "ReadWriteOnce"   ]
      resources:
        requests:
          storage:  8Gi

